name: Test pre-commit, code and docs

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: pre-commit/action@v3.0.0
  test_code:
    needs: [pre-commit]
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 12
      matrix:
        python-version: ["3.10"]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: pyproject.toml
      - name: Install dependencies
        run: |
          pip install .
          pip install flake8 pytest pytest_regressions
      - name: Lint with flake8
        run: |
          flake8 .
      - name: Test with pytest
        run: pytest
  test_code_coverage_python37:
    runs-on: ubuntu-latest
    needs: [pre-commit]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: "pip"
          cache-dependency-path: pyproject.toml
      - name: Install dependencies
        run: |
          pip install -e .
      - name: Test with pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest klayout lytest scikit-image pytest-cov pytest_regressions
          pytest --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
  test_docs:
    needs: [pre-commit]
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 12
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: anaconda-client-env
      - name: Add conda to system path
        run: |
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          sudo apt install pandoc
          pip install -e .[docs]
      - name: Test documentation
        env:
          TIDY3D_USER: ${{ secrets.TIDY3D_EMAIL }}
          TIDY3D_PASS: ${{ secrets.TIDY3D_PASSWORD }}
          DISPLAY: 1.0
        run: |
          mkdir -p $HOME/.tidy3d
          echo ${{ secrets.TIDY3D_AUTH }} > $HOME/.tidy3d/auth.json
          cd docs
          make html

  release_pypi:
    needs: [pre-commit]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
